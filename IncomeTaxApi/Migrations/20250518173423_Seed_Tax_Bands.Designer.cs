// <auto-generated />
using IncomeTaxApi.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace IncomeTaxApi.Migrations
{
    [DbContext(typeof(IncomeTaxCalculatorContext))]
    [Migration("20250518173423_Seed_Tax_Bands")]
    partial class Seed_Tax_Bands
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.HasSequence("Sequence-TaxBand")
                .IncrementsBy(10);

            modelBuilder.Entity("IncomeTaxApi.Data.Models.TaxBand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "Sequence-TaxBand");

                    b.Property<int>("LowerLimit")
                        .HasColumnType("integer");

                    b.Property<int>("Rate")
                        .HasColumnType("integer");

                    b.Property<int?>("UpperLimit")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("TaxBands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LowerLimit = 0,
                            Rate = 0,
                            UpperLimit = 5000
                        },
                        new
                        {
                            Id = 2,
                            LowerLimit = 5000,
                            Rate = 20,
                            UpperLimit = 20000
                        },
                        new
                        {
                            Id = 3,
                            LowerLimit = 20000,
                            Rate = 40
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
